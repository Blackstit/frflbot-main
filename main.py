from admin_commands import *
from database import connect_to_database
from tasks import task_callback_handler, check_invited_referrals_handler, generate_tasks_keyboard
from markups import *
import telebot
from telebot import types
import pymongo
import os
from datetime import datetime
import time
import random
import string
import media

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
from dotenv import load_dotenv
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
chat_stats_collection, users_collection = connect_to_database()

# –í–∞—à –±–æ—Ç
token = os.getenv('TELEGRAM_BOT_TOKEN_MAIN')
bot = telebot.TeleBot(token)

# ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
chan_id = -1002109241014

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª—ã
def check_subscription(user_id):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ
        status = bot.get_chat_member(chan_id, user_id).status
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "member", "creator" –∏–ª–∏ "administrator", –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø
        return status in ["member", "creator", "administrator"]
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª:", e)
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
def generate_referral_code():
    return ''.join(random.choices(string.ascii_letters + string.digits, k=10))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def create_user_profile(user_id, referrer_id=None):
    username = bot.get_chat(user_id).username
    first_name = bot.get_chat(user_id).first_name
    last_name = bot.get_chat(user_id).last_name
    registration_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    referral_code = generate_referral_code()
    referral_link = f"t.me/FireFlyCCbot?start={referral_code}"
    user = {
        "_id": str(user_id),
        "first_name": first_name,
        "last_name": last_name,
        "username": username,
        "is_admin": 0, 
        "is_registered": True,
        "registration_date": registration_date,
        "email": "",  
        "referral_code": referral_code,
        "referral_link": referral_link,
        "referral_count": 0,
        "balance": 0,  
        "reputation": 0,
        "message_cost": 0.5,
        "improvements": {},  
        "tasks_completed": [],  
        "roles": [{
            "role_id": "Newbie",
            "role_name": "Glowworm Apprentice",
            "description": "–£—á–µ–Ω–∏–∫ –°–∏—è—é—â–µ–≥–æ –ß–µ—Ä–≤—è–∫–∞ - –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫, —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Å–≤–æ–π –ø—É—Ç—å –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —á–∞—Ç–∞ 'Firefly Crypto'."
        }]
    }
    if referrer_id:
        user['referrer_id'] = referrer_id
    users_collection.insert_one(user)
    return user

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"
@bot.callback_query_handler(func=lambda call: call.data == "check")
def c_listener(call):
    user_id = call.message.chat.id
    is_subscribed = check_subscription(user_id)

    if is_subscribed:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
        bot.send_message(chat_id=user_id, text="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_keyboard)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        user_data = users_collection.find_one({"_id": str(user_id)})
        if user_data and 'referrer_id' in user_data:
            referrer_id = user_data['referrer_id']
            # –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–µ—Ä–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–≥–æ referrer_code
            referrer_data = users_collection.find_one({"referral_code": referrer_id})
            if referrer_data:
                referrer_id = referrer_data['_id']
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É –æ –Ω–æ–≤–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–µ
                referrer_name = referrer_data['first_name']
                referrer_username = referrer_data['username']
                message_text = f"""üéâ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! {referrer_name} (@{referrer_username})

–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ +10 $FRFL!!!!"""
                bot.send_message(referrer_id, message_text)
                # –ù–∞—á–∏—Å–ª—è–µ–º 10 –æ—á–∫–æ–≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –∑–∞ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
                users_collection.update_one({"_id": referrer_id}, {"$inc": {"balance": 10, "referral_count": 1}})
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª—ã, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–º—É btn_subscribe
        bot.send_message(chat_id=user_id, text="–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –Ω–∞—à —á–∞—Ç", reply_markup=subscribe_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def start(message):
    user_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user_data = users_collection.find_one({"_id": str(user_id)})
    if not user_data:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–º–∞–Ω–¥–µ "/start"
        referrer_id = None
        parts = message.text.split()
        if len(parts) > 1:
            referrer_id = parts[1]

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–µ—Ä–µ–¥–∞—á–µ–π referrer_id
        create_user_profile(user_id, referrer_id)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –∏ –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è
        bot.send_message(user_id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä FireFly Crypto!")
        bot.send_message(user_id, """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –∫–æ–º—å—é–Ω–∏—Ç–∏ –∫—Ä–∏–ø—Ç–æ-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤!

–ú—ã –∏—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å–≤–æ–µ –≤—Ä–µ–º—è –∏ —ç–Ω–µ—Ä–≥–∏—é –≤ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —É—Å–ø–µ—Ö—É!

–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª –∏ —Å–æ–∑–¥–∞–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤ —ç—Ç–æ–º –±–æ—Ç–µ.

–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∏ –ø–æ–æ—â—Ä–µ–Ω–∏—è –æ—Ç FireFly Crypto! –î–∞–≤–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —É—Å–ø–µ—Ö—É –≤–º–µ—Å—Ç–µ!""", reply_markup=subscribe_keyboard)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(user_id, "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –Ω–∞—Å"
@bot.message_handler(func=lambda message: message.text == "–û –Ω–∞—Å üåê")
def about_us(message):
    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
    about_text = ("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –∫–æ–º—å—é–Ω–∏—Ç–∏ –∫—Ä–∏–ø—Ç–æ-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤!\n\n"
                  "–ú—ã –∏—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å —Å–≤–æ–µ –≤—Ä–µ–º—è –∏ —ç–Ω–µ—Ä–≥–∏—é –≤ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —É—Å–ø–µ—Ö—É!\n\n"
                  "–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª –∏ —Å–æ–∑–¥–∞–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤ —ç—Ç–æ–º –±–æ—Ç–µ.\n\n"
                  "–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—ã –∏ –ø–æ–æ—â—Ä–µ–Ω–∏—è –æ—Ç FireFly Crypto! –î–∞–≤–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —É—Å–ø–µ—Ö—É –≤–º–µ—Å—Ç–µ!")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(message.chat.id, about_text, reply_markup=about_us_keyboard)

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Ñ–∏–ª—å üë§")
def profile(message):
    user_id = message.chat.id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
    user_data = users_collection.find_one({"_id": str(user_id)})

    if user_data:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        firsr_name = user_data.get('first_name', '–ù–µ—Ç')
        username = user_data.get('username', '–ù–µ—Ç')
        role_id = user_data.get('roles', [{'role_id': 'Newbie'}])[0]['role_id']  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 'Newbie'
        reputation = user_data.get('reputation', 0)
        balance = user_data.get('balance', 0)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        profile_message = f"*–ò–º—è*: {firsr_name}\n"\
                          f"*Username*: @{username}\n"\
                          f"*–†–æ–ª—å*: {role_id}\n"\
                          f"*–†–µ–ø—É—Ç–∞—Ü–∏—è*: {reputation}\n\n"\
                          f"*–ë–∞–ª–∞–Ω—Å $FRFL*: {balance}\n"

        bot.send_photo(user_id, media.profile_img, caption=profile_message, reply_markup=profile_keyboard, parse_mode='Markdown')
    else:
        bot.send_message(user_id, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        

@bot.callback_query_handler(func=lambda call: call.data == "profile_stats")
def profile_stats_handler(call):
    try:
        user_id = call.message.chat.id

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
        user_data = users_collection.find_one({"_id": str(user_id)})

        if user_data:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            total_messages_count = 0

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            stats_message = f"*–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*:\n\n"

            # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —á–∞—Ç—É
            for chat_stats_data in chat_stats_collection.find():
                chat_title = chat_stats_data.get("chat_title", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
                chat_messages_count = chat_stats_data.get("users", {}).get(str(user_id), {}).get("message_count", 0)
                total_messages_count += chat_messages_count
                chat_percentage = (chat_messages_count / chat_stats_data.get("total_messages_count", 1)) * 100
                stats_message += f"- *{chat_title}*: {chat_messages_count} —Å–æ–æ–±—â–µ–Ω–∏–π ({chat_percentage:.2f}%)\n"

            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
            improvements_count = len(user_data.get('improvements', {}))
            tasks_completed_count = len(user_data.get('tasks_completed', []))
            message_cost = user_data.get('message_cost', 0)

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏—è—Ö –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
            stats_message += f"\n\n*–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π*: {total_messages_count}\n"
            stats_message += f"*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π*: {improvements_count}\n"
            stats_message += f"*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π*: {tasks_completed_count}\n"
            stats_message += f"*–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π*: {message_cost} FRFL"

            bot.send_message(user_id, stats_message, reply_markup=close_keyboard, parse_mode='Markdown')
        else:
            bot.send_message(user_id, "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    except Exception as e:
        print("Error handling profile_stats command:", e)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"
@bot.callback_query_handler(func=lambda call: call.data == "ref_program")
def referral_program_handler(call):
    try:
        user_id = call.message.chat.id

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
        user_data = users_collection.find_one({"_id": str(user_id)})

        if user_data:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
            referral_link = user_data['referral_link']
            referral_count = user_data.get("referral_count", 0)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç–µ
            reply_text_chat = (
                "üåü *–†–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*\n\n"
                "–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã!\n\n"
                f"üë• *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π*: {referral_count}\n"
                "üí∞ *–ë–æ–Ω—É—Å—ã*: –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã!\n"
                "üìé *–£—Å–ª–æ–≤–∏—è*: –£—Å–ª–æ–≤–∏—è —Ä–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"
                f"*–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞*: {referral_link}"
            )

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–≥—É
            reply_text_friend = (
                "–ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –±–æ—Ç—É FireFly Crypto. \n\n"
                "–° –Ω–∏–º —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫—Ä–∏–ø—Ç—É –∑–∞ –æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ! \n\n"
                f"–í–æ—Ç –º–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {referral_link}"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ —á–∞—Ç
            bot.send_message(chat_id=user_id, text=reply_text_chat, reply_markup=generate_ref_keyboard(reply_text_friend), parse_mode="Markdown", disable_web_page_preview=True)
        else:
            bot.send_message(chat_id=user_id, text="–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print("Error handling ref_program callback:", e)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–µ –¥—Ä—É–∑—å—è"
@bot.callback_query_handler(func=lambda call: call.data == "my_ref_friends")
def my_referral_friends_handler(call):
    try:
        user_id = call.message.chat.id

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
        user_data = users_collection.find_one({"_id": str(user_id)})

        if user_data:
            # –ü–æ–ª—É—á–∞–µ–º referral_code –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            referral_code = user_data.get("referral_code")

            # –ò—â–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á–µ–π referrer_id —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å referral_code —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            referred_users = users_collection.find({"referrer_id": referral_code})

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π
            referral_friends_message = "*–°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π*:\n\n"
            for referred_user in referred_users:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏ username –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞
                first_name = referred_user.get("first_name", "")
                username = referred_user.get("username", "")
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º –¥—Ä—É–≥–µ –≤ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                referral_friends_message += f"*–î—Ä—É–≥: {first_name} (@{username})*\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑—å—è—Ö
            bot.send_message(chat_id=user_id, text=referral_friends_message, parse_mode="Markdown", reply_markup=close_keyboard)
        else:
            bot.send_message(chat_id=user_id, text="–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print("Error handling my_ref_friends callback:", e)


# –£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 
@bot.callback_query_handler(func=lambda call: call.data == "close")
def close_message_handler(call):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.delete_message(call.message.chat.id, call.message.message_id) 

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
@bot.callback_query_handler(func=lambda call: call.data == "profile_tasks")
def profile_tasks_handler(call):
    profile_keyboard = generate_tasks_keyboard()
    bot.send_message(call.message.chat.id, "–í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π $FRFL", reply_markup=profile_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π
@bot.callback_query_handler(func=lambda call: call.data == "check_10_messages")
def check_10_messages_callback(call):
    task_callback_handler(bot, call, users_collection, chat_stats_collection, "task_id_10_messages", 10, 50)


@bot.callback_query_handler(func=lambda call: call.data == "check_30_messages")
def check_30_messages_callback(call):
    task_callback_handler(bot, call, users_collection, chat_stats_collection, "task_id_30_messages", 30, 100)

@bot.callback_query_handler(func=lambda call: call.data == "check_invited_referrals")
def check_invited_referrals_callback(call):
    check_invited_referrals_handler(bot, call, users_collection)

# –í–∞—à —Ñ–∞–π–ª —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–æ–≤
@bot.message_handler(commands=['givebalance'])
def handle_give_balance_command(message):
    execute_give_balance_command(bot, message, *message.text.split()[1:], users_collection)

@bot.message_handler(commands=['giverep'])
def handle_give_reputation_command(message):
    execute_give_reputation_command(bot, message, *message.text.split()[1:], users_collection)

@bot.message_handler(commands=['giveref'])
def handle_give_referral_count_command(message):
    execute_give_referral_count_command(bot, message, *message.text.split()[1:], users_collection)

while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"Error: {e}")
        time.sleep(5)  # –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
